name: Integration
on:
  pull_request:
  push:
    branches: [ master]
jobs:
  build-win:
    name: Build for Windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: msys2/setup-msys2@v2
    - name: Install dependencies
      run: |
        msys2 -c 'pacman -S --noconfirm make mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake'
    - name: Create Build Directory
      run: |
        mkdir -p build/mingw64
    - name: Configure CMake
      shell: msys2 {0}
      run: |
        cmake -G "MinGW Makefiles" ../.. -DBUILD_SHARED_LIBS=ON -DFLATCC_OFFSET_SIZE=8 -DCMAKE_BUILD_TYPE=Release
      working-directory: ${{github.workspace}}/build/mingw64
    - name: Build flatcc_cli
      shell: msys2 {0}
      run: |
        cmake --build . --target flatcc_cli --config Release
      working-directory: ${{github.workspace}}/build/mingw64
    - name: Build flatccrt
      shell: msys2 {0}
      run: |
        cmake --build . --target flatccrt --config Release
      working-directory: ${{github.workspace}}/build/mingw64
    # - name: Run tests
    #   shell: msys2 {0}
    #   run: |
    #     ctest
    #   working-directory: ${{github.workspace}}/build/mingw64
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: flatcc-win
        path: |
          bin/*.*
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: |
        sudo apt install ninja-build -y
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.9
    - name: Create Build Directory
      run: |
        mkdir -p build/linux
    - name: Configure CMake
      run: |
        cmake ../.. -DBUILD_SHARED_LIBS=ON -DFLATCC_OFFSET_SIZE=8 -DCMAKE_BUILD_TYPE=Release
      working-directory: ${{github.workspace}}/build/linux
    - name: Build flatcc_cli
      run: |
        cmake --build . --target flatcc_cli --config Release
      working-directory: ${{github.workspace}}/build/linux
    - name: Build flatccrt
      run: |
        cmake --build . --target flatccrt --config Release
      working-directory: ${{github.workspace}}/build/linux
    - name: Run Test
      run: |
        scripts/test.sh
    - name: Create Osx Directory and Copy artifacts/
      run: |
        mkdir linux
        cp lib/*.* linux/
        cp bin/flatcc linux/
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: flatcc-linux
        path: |
          linux
  build-osx:
    name: Build for OSX
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: |
        brew install ninja
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.9
    - name: Create Build Directory
      run: |
        mkdir -p build/osx
    - name: Configure CMake
      run: |
        cmake ../.. -DBUILD_SHARED_LIBS=ON -DFLATCC_OFFSET_SIZE=8 -DCMAKE_BUILD_TYPE=Release
      working-directory: ${{github.workspace}}/build/osx
    - name: Build flatcc_cli
      run: |
        cmake --build . --target flatcc_cli --config Release
      working-directory: ${{github.workspace}}/build/osx
    - name: Build flatccrt
      run: |
        cmake --build . --target flatccrt --config Release
      working-directory: ${{github.workspace}}/build/osx
    - name: Create Osx Directory and Copy artifacts/
      run: |
        mkdir osx
        cp lib/*.* osx/
        cp bin/flatcc osx/
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: flatcc-osx
        path: |
          osx