name: Create Release
on:
  push:
    tags:
      - v*
jobs:
  build-win:
    name: Build for Windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: msys2/setup-msys2@v2
    - name: Install dependencies
      run: |
        msys2 -c 'pacman -S --noconfirm make mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake'
    - name: Create Build Directory
      run: |
        mkdir -p build/mingw64
    - name: Configure CMake
      shell: msys2 {0}
      run: |
        cmake -G "MinGW Makefiles" ../.. -DBUILD_SHARED_LIBS=ON -DFLATCC_OFFSET_SIZE=8 -DCMAKE_BUILD_TYPE=Release
      working-directory: ${{github.workspace}}/build/mingw64
    - name: Build flatcc_cli
      shell: msys2 {0}
      run: |
        cmake --build . --target flatcc_cli --config Release
      working-directory: ${{github.workspace}}/build/mingw64
    - name: Build flatccrt
      shell: msys2 {0}
      run: |
        cmake --build . --target flatccrt --config Release
      working-directory: ${{github.workspace}}/build/mingw64
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: flatcc-win
        path: |
          bin/*.*
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Create Build Directory
      run: |
        mkdir -p build/linux64
    - name: Configure CMake
      run: |
        cmake ../.. -DBUILD_SHARED_LIBS=ON -DFLATCC_OFFSET_SIZE=8 -DCMAKE_BUILD_TYPE=Release
      working-directory: ${{github.workspace}}/build/linux64
    - name: Build flatcc_cli
      run: |
        cmake --build . --target flatcc_cli --config Release
      working-directory: ${{github.workspace}}/build/linux
    - name: Build flatccrt
      run: |
        cmake --build . --target flatccrt --config Release
      working-directory: ${{github.workspace}}/build/linux
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: flatcc-linux
        path: |
          lib/*.*
          bin/flatcc
  build-osx:
    name: Build for OSX
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Create Build Directory
      run: |
        mkdir -p build/osx64
    - name: Configure CMake
      run: |
        cmake ../.. -DBUILD_SHARED_LIBS=ON -DFLATCC_OFFSET_SIZE=8 -DCMAKE_BUILD_TYPE=Release
      working-directory: ${{github.workspace}}/build/osx
    - name: Build flatcc_cli
      run: |
        cmake --build . --target flatcc_cli --config Release
      working-directory: ${{github.workspace}}/build/osx
    - name: Build flatccrt
      run: |
        cmake --build . --target flatccrt --config Release
      working-directory: ${{github.workspace}}/build/osx
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: flatcc-osx
        path: |
          lib/*.*
          bin/flatcc
  create-release:
    runs-on: ubuntu-latest
    needs: [build-win,build-linux,build-osx]
    steps:
      - name: Download flatcc windows
        uses: actions/download-artifact@v2
        with:
          name: flatcc-win
          path: windows
      - name: Download flatcc linux
        uses: actions/download-artifact@v2
        with:
          name: flatcc-linux
          path: linux
      - name: Download flatcc osx
        uses: actions/download-artifact@v2
        with:
          name: flatcc-osx
          path: osx
      - name: Zip file
        run: |
          mkdir artifacts/
          tar czf artifacts/flatcc-linux64.tar.gz -C linux/ $(find linux -type f -name "*.so" -exec basename {} \;) flatcc
          tar czf artifacts/flatcc-osx64.tar.gz -C osx/ $(find osx -type f -name "*.dylib" -exec basename {} \;) flatcc
          tar czf artifacts/flatcc-win64.tar.gz -C windows/ $(find win -type f -name "*.* -exec basename {} \;)
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: flatcc
          files: |
            artifacts/*.*
        env:
          GITHUB_TOKEN: ${{ github.token }}